name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Copy prowler.yaml to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: 54.221.241.22
        USER: ubuntu
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        scp -o StrictHostKeyChecking=no -i private_key prowler.yaml ${USER}@${HOST}:~/prowler.yaml
        scp -o StrictHostKeyChecking=no -i private_key cluster.yaml ${USER}@${HOST}:~/cluster.yaml
        scp -o StrictHostKeyChecking=no -i private_key deploy.yaml ${USER}@${HOST}:~/deploy.yaml
        scp -o StrictHostKeyChecking=no -i private_key service.yaml ${USER}@${HOST}:~/service.yaml
        scp -o StrictHostKeyChecking=no -i private_key ingressroute.yaml ${USER}@${HOST}:~/ingressroute.yaml

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: 54.221.241.22
        USER: ubuntu
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
          # Install K3s
          sudo su -
          apt update 
          curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 777
          
          # Wait for K3s to be ready
          until kubectl get nodes; do sleep 5; done
          
          # Install Helm
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          
          # Create namespaces
          kubectl create namespace checkov
          kubectl create namespace prowler
          kubectl create namespace cert-manager
          
          # Install Prowler using the yaml file from the repo
          kubectl apply -f ~/prowler.yaml -n prowler
          
          # Install Checkov
          kubectl apply -f https://raw.githubusercontent.com/bridgecrewio/checkov/main/kubernetes/checkov-job.yaml -n checkov
          
          # Install cert-manager
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.1/cert-manager.crds.yaml
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
          sudo chmod 644 $KUBECONFIG
          helm repo add jetstack https://charts.jetstack.io --force-update
          helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v1.15.1
          
          # Verify installations
          kubectl get namespaces
          kubectl get pods -n checkov
          kubectl get pods -n prowler
          kubectl get pods -n cert-manager
          helm list -A

          # Creating Cluster Issuer
          kubectl apply -f cluster.yaml
          kubectl get clusterissuer

          # Deploying Nginx Server
          kubectl apply -f deploy.yaml

          # Adding service for Nginx
          kubectl apply -f service.yaml

          # Verfying pods and services
          kubectl get all
          
          # Appling Ingress Route for the service
          kubectl apply -f ingressroute.yaml
          
          # verifying Ingress route 
          kubectl get ingressroute
          
          # Wait for Certificate to be ready
          until kubectl get certificate; do sleep 10; True

          # Checking certificates
          kubectl get certificates
        '
